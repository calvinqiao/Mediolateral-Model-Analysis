function [A, B, pendMass] = initPrediction(measures, ankle_distance)
% INITPREDICTION  Gets unchanged coefficients for 2nd-order equation.
%   [A, B, PENDMASS] = INITPREDICTION(MEASURES, ANKLE_DISTANCE) calculates
%   unchanged (for one trial) coefficients for 2nd-order equation to solve for
%   delta_l we need.

    pendMass = 0.971 * measures.mass;

    A = ((measures.HJC_distance - ankle_distance) / (measures.HJC_distance + ankle_distance))^2 ...
        * measures.HJC_distance / 2 ...
        * (measures.leg_CoM / measures.leg_len * measures.leg_mass ...
        + measures.pelvis_mass / 2 + measures.trunk_mass / 2);

    B = 2 * measures.leg_mass * measures.leg_CoM ...
        + measures.pelvis_mass * (measures.leg_len ...
        - (measures.HJC_distance - ankle_distance) / (measures.HJC_distance + ankle_distance) * measures.pelvis_CoM) ...
        + measures.trunk_mass * (measures.leg_len ...
        + (measures.HJC_distance-ankle_distance) / (measures.HJC_distance+ankle_distance) * measures.trunk_CoM);
end
